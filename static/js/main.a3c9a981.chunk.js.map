{"version":3,"sources":["context/Page/PageContext.js","components/Page.jsx","context/types.jsx","context/Page/PageReducer.js","api/api.js","context/Page/PageState.js","App.js","reportWebVitals.js","index.js"],"names":["PageContext","createContext","useContext","state","getFilms","createPages","useState","currentPage","setCurrentPage","pageCount","Math","ceil","totalCountFilms","pages","useEffect","className","films","map","item","src","medium_cover_image","alt","title","year","rating","runtime","description_full","length","slice","id","page","index","onClick","GET_FILMS","SET_TOTAL_FILMS","PageReducer","action","type","count","instance","axios","baseURL","headers","filmsAPI","get","PageState","props","useReducer","dispatch","Provider","value","then","response","data","movies","movie_count","pagesCount","i","push","children","App","Page","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a3c9a981.chunk.js","sourcesContent":["import {createContext} from 'react';\r\n\r\nexport const PageContext = createContext()","import {useContext, useEffect, useState} from \"react\";\r\nimport {PageContext} from \"../context/Page/PageContext\";\r\n\r\nexport default () => {\r\n\r\n    const {state, getFilms, createPages} = useContext(PageContext);\r\n    const [currentPage, setCurrentPage] = useState(1)\r\n\r\n    const pageCount = Math.ceil(state.totalCountFilms / 16)\r\n    const pages = []\r\n\r\n    useEffect(() => {\r\n        getFilms(currentPage)\r\n    }, [currentPage])\r\n\r\n    createPages(pages, pageCount, currentPage)\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"films-list\">\r\n                {state.films.map(item =>\r\n                    <div className=\"film-item\" key={item.id}>\r\n                        <div>\r\n                            <img className={'film-item__img'} src={item.medium_cover_image} alt=\"\"/>\r\n                        </div>\r\n                        <div className={'film-item__about'}>\r\n                            <h3 className={'film-item__title'}>\r\n                                {item.title}\r\n                            </h3>\r\n                            <p className={'film-item__year'}>\r\n                                {item.year}\r\n                            </p>\r\n                            <p className=\"film-item__rating\">\r\n                                {item.rating}\r\n                            </p>\r\n                            <p className=\"film-item__runtime\">\r\n                                {item.runtime} min\r\n                            </p>\r\n                            <p className=\"film-item__description\">\r\n                                {item.description_full.length < 300? item.description_full :\r\n                                    item.description_full.slice(0,300) + '...'\r\n                                }\r\n                            </p>\r\n                        </div>\r\n\r\n                    </div>\r\n                )}\r\n            </div>\r\n            <div className={'pagination'}>\r\n                {pages.map((page, index) =>\r\n                    <span key={index}\r\n                          className={currentPage === page ? 'current_page page' : 'page'}\r\n                          onClick={() => setCurrentPage(page)}\r\n                    >\r\n                            {page}\r\n                        </span>\r\n                )}\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n};","export const GET_FILMS = 'GET_FILMS'\r\nexport const SET_TOTAL_FILMS = 'SET_TOTAL_FILMS'\r\n\r\n","import {GET_FILMS, SET_TOTAL_FILMS} from \"../types\";\r\n\r\nexport const PageReducer = (state, action) => {\r\n    switch (action.type) {\r\n        case GET_FILMS:\r\n            return {...state,films: action.films};\r\n        case SET_TOTAL_FILMS:\r\n            return {...state,totalCountFilms: action.count};\r\n        default:\r\n            return state;\r\n    }\r\n}","import * as axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://yts.mx/api/v2/',\r\n    headers: {},\r\n});\r\n\r\nexport const filmsAPI = {\r\n    getfilms(currentPage = 1) {\r\n        return instance\r\n            .get(`list_movies.json?limit=16&page=${currentPage}`)\r\n    },\r\n    // getFavoriteCats(currentPage) {\r\n    //     return instance\r\n    //         .get(`favourites/?limit=15&page=${currentPage}`)\r\n    // },\r\n    // deleteCat(id) {\r\n    //     return instance\r\n    //         .delete(`favourites/${id}`)\r\n    // },\r\n};\r\n\r\n\r\n","import React, {useReducer} from 'react';\r\nimport {PageReducer} from \"./PageReducer\";\r\nimport {GET_FILMS,  SET_TOTAL_FILMS} from \"../types\";\r\nimport {filmsAPI} from \"../../api/api\";\r\nimport {PageContext} from \"./PageContext\";\r\n\r\nexport const PageState = (props) => {\r\n    let initialState = {\r\n        films: [],\r\n        totalCountFilms: 0\r\n    };\r\n    const [state, dispatch] = useReducer(PageReducer, initialState)\r\n    const setFilms = (films) => ({\r\n        type: GET_FILMS,\r\n        films\r\n    })\r\n    const setTotalFilms = (count) => ({\r\n        type: SET_TOTAL_FILMS,\r\n        count\r\n    })\r\n\r\n    const getFilms = (currentPage) => {\r\n        filmsAPI.getfilms(currentPage).then(response => {\r\n            dispatch(setFilms(response.data.data.movies))\r\n            dispatch(setTotalFilms(response.data.data.movie_count))\r\n        })\r\n    }\r\n    function createPages(pages, pagesCount, currentPage) {\r\n        if (pagesCount > 11) {\r\n            if (currentPage > 5) {\r\n                for (let i = currentPage - 5; i <= currentPage + 5; i++) {\r\n                    pages.push(i)\r\n                    if (i === pagesCount) break\r\n                }\r\n            } else {\r\n                for (let i = 1; i <= 11; i++) {\r\n                    pages.push(i)\r\n                    if (i === pagesCount) break\r\n                }\r\n            }\r\n        } else {\r\n            for (let i = 1; i <= pagesCount; i++) {\r\n                pages.push(i)\r\n            }\r\n        }\r\n    }\r\n    return (\r\n        <PageContext.Provider value={{\r\n            state, getFilms, createPages\r\n        }}>\r\n            {props.children}\r\n        </PageContext.Provider>\r\n    )\r\n}","import './App.css';\r\nimport Page from \"./components/Page\";\r\nimport {PageState} from \"./context/Page/PageState\";\r\n\r\nfunction App() {\r\n    return (\r\n        <div className=\"wrapper\">\r\n            <PageState>\r\n                <Page/>\r\n            </PageState>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}