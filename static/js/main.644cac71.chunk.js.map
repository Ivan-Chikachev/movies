{"version":3,"sources":["context/Page/PageContext.js","components/Page.jsx","context/types.jsx","context/Page/PageReducer.js","api/api.js","context/Page/PageState.js","App.js","reportWebVitals.js","index.js"],"names":["PageContext","createContext","useContext","state","getFilms","useEffect","className","films","map","item","title","id","GET_FILMS","PageReducer","action","type","instance","axios","baseURL","headers","filmsAPI","currentPage","get","PageState","props","useReducer","dispatch","Provider","value","then","response","data","movies","children","App","Page","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uLAEaA,G,YAAcC,2B,OCCZ,aAEX,MAA0BC,qBAAWF,GAA9BG,EAAP,EAAOA,MAAOC,EAAd,EAAcA,SAQd,OALAC,qBAAU,WACND,MACD,IAIC,qBAAKE,UAAU,YAAf,SACI,qBAAKA,UAAU,UAAf,SACKH,EAAMI,MAAMC,KAAI,SAAAC,GAAI,OACjB,qBAAKH,UAAU,gBAAf,SACKG,EAAKC,OAD0BD,EAAKE,Y,eCjBhDC,EAAY,YCEZC,EAAc,SAACV,EAAOW,GAC/B,OAAQA,EAAOC,MACX,KAAKH,EACD,OAAO,2BAAIT,GAAX,IAAiBI,MAAOO,EAAOP,QACnC,QACI,OAAOJ,ICLba,E,MAAWC,OAAa,CAC1BC,QAAS,yBACTC,QAAS,KAGAC,EAAW,SACXC,GACL,OAAOL,EACFM,IADE,qCCHFC,EAAY,SAACC,GACtB,IAGA,EAA0BC,qBAAWZ,EAHlB,CACfN,MAAO,KAEX,mBAAOJ,EAAP,KAAcuB,EAAd,KAWA,OACI,cAAC1B,EAAY2B,SAAb,CAAsBC,MAAO,CACzBzB,QAAOC,SAPE,WACbgB,IAAoBS,MAAK,SAAAC,GANZ,IAACvB,EAOVmB,GAPUnB,EAOQuB,EAASC,KAAKA,KAAKC,OAPhB,CACzBjB,KAAMH,EACNL,gBASA,SAGKiB,EAAMS,YCXJC,MAVf,WACI,OACI,qBAAK5B,UAAU,UAAf,SACI,cAAC,EAAD,UACI,cAAC6B,EAAD,SCIDC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBT,MAAK,YAAkD,IAA/CU,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.644cac71.chunk.js","sourcesContent":["import {createContext} from 'react';\r\n\r\nexport const PageContext = createContext()","import {useContext, useEffect, useState} from \"react\";\r\nimport {PageContext} from \"../context/Page/PageContext\";\r\n\r\nexport default () => {\r\n\r\n    const {state, getFilms} = useContext(PageContext);\r\n    // const [currentPage, setCurrentPage] = useState(1)\r\n\r\n    useEffect(() => {\r\n        getFilms()\r\n    }, [])\r\n\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"gallery\">\r\n                {state.films.map(item =>\r\n                    <div className=\"gallery__item\" key={item.id}>\r\n                        {item.title}\r\n                    </div>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n};","export const GET_FILMS = 'GET_FILMS'\r\n\r\n","import {GET_FILMS} from \"../types\";\r\n\r\nexport const PageReducer = (state, action) => {\r\n    switch (action.type) {\r\n        case GET_FILMS:\r\n            return {...state,films: action.films};\r\n        default:\r\n            return state;\r\n    }\r\n}","import * as axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://yts.mx/api/v2/',\r\n    headers: {},\r\n});\r\n\r\nexport const filmsAPI = {\r\n    getfilms(currentPage) {\r\n        return instance\r\n            .get(`list_movies.json?limit=15&page=1`)\r\n    },\r\n    // getFavoriteCats(currentPage) {\r\n    //     return instance\r\n    //         .get(`favourites/?limit=15&page=${currentPage}`)\r\n    // },\r\n    // deleteCat(id) {\r\n    //     return instance\r\n    //         .delete(`favourites/${id}`)\r\n    // },\r\n};\r\n\r\n\r\n","import React, {useReducer} from 'react';\r\nimport {PageReducer} from \"./PageReducer\";\r\nimport {GET_FILMS} from \"../types\";\r\nimport {filmsAPI} from \"../../api/api\";\r\nimport {PageContext} from \"./PageContext\";\r\n\r\nexport const PageState = (props) => {\r\n    let initialState = {\r\n        films: [],\r\n    };\r\n    const [state, dispatch] = useReducer(PageReducer, initialState)\r\n    const setFilms = (films) => ({\r\n        type: GET_FILMS,\r\n        films\r\n    })\r\n\r\n    const getFilms = () => {\r\n        filmsAPI.getfilms().then(response => {\r\n            dispatch(setFilms(response.data.data.movies));\r\n        })\r\n    }\r\n    return (\r\n        <PageContext.Provider value={{\r\n            state, getFilms\r\n        }}>\r\n            {props.children}\r\n        </PageContext.Provider>\r\n    )\r\n}","import './App.css';\r\nimport Page from \"./components/Page\";\r\nimport {PageState} from \"./context/Page/PageState\";\r\n\r\nfunction App() {\r\n    return (\r\n        <div className=\"wrapper\">\r\n            <PageState>\r\n                <Page/>\r\n            </PageState>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}