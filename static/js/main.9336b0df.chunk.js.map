{"version":3,"sources":["context/Page/PageContext.js","context/Comments/AboutContext.js","components/About.jsx","components/Pagination.jsx","components/Page.jsx","context/types.jsx","context/Page/PageReducer.js","api/api.js","context/Page/PageState.js","context/Comments/AboutReducer.js","context/Comments/AboutState.js","App.js","reportWebVitals.js","index.js"],"names":["PageContext","createContext","AboutContext","props","useState","value","setValue","useContext","state","deleteComment","comments","item","location","idFilm","id","className","src","medium_cover_image","alt","title","year","runtime","rating","genres","join","description_full","onSubmit","e","preventDefault","push","type","placeholder","onChange","target","map","c","index","onClick","pages","page","currentPage","setCurrentPage","getFilms","createPages","pageCount","Math","ceil","totalCountFilms","useEffect","films","to","pathname","length","slice","Pagination","GET_FILMS","SET_TOTAL_FILMS","DELETE_COMMENT","PageReducer","action","count","instance","axios","baseURL","headers","filmsAPI","get","PageState","useReducer","dispatch","Provider","then","response","data","movies","movie_count","pagesCount","i","children","AboutReducer","filter","AboutState","deleteComOfId","App","path","exact","component","Page","About","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4MAEaA,EAAcC,0BCAdC,EAAeD,0B,OCCb,WAACE,GAAW,IAAD,MACtB,EAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KAEA,EAA+BC,qBAAWL,GAAnCM,EAAP,EAAOA,MAAOC,EAAd,EAAcA,cACRC,EAAWF,EAAME,SAEjBC,EAAI,UAAGR,EAAMS,gBAAT,iBAAG,EAAgBJ,aAAnB,aAAG,EAAuBG,KAC9BE,EAASF,EAAKG,GAQpB,OACI,qBAAKC,UAAU,YAAf,SACI,sBAAKA,UAAU,OAAf,UACI,qBAAKA,UAAU,iBAAf,SACI,qBAAKA,UAAU,YAAYC,IAAKL,EAAKM,mBAAoBC,IAAI,OAEjE,sBAAKH,UAAU,cAAf,UACI,oBAAIA,UAAW,cAAf,SAA+BJ,EAAKQ,QACpC,mBAAGJ,UAAW,aAAd,SAA6BJ,EAAKS,OAClC,oBAAGL,UAAW,gBAAd,UACI,sBAAMA,UAAU,iBAAhB,uBACCJ,EAAKU,QAFV,UAIA,oBAAGN,UAAW,eAAd,UACI,sBAAMA,UAAU,iBAAhB,sBACCJ,EAAKW,UAEV,oBAAGP,UAAW,eAAd,UAA8B,sBAC1BA,UAAU,iBADgB,qBAA9B,IAC+CJ,EAAKY,OAAOC,KAAK,SAChE,mBAAGT,UAAW,oBAAd,SAAoCJ,EAAKc,mBACzC,sBAAKV,UAAW,WAAhB,UACI,uBAAMA,UAAW,iBAAkBW,SA5BjC,SAAAC,GAClBA,EAAEC,iBACGlB,EAASG,KAASH,EAASG,GAAU,IACvCR,GAAOK,EAASG,GAAQgB,KAAKxB,GAChCC,EAAS,KAwBO,UACI,uBAAOS,UAAW,kBACXe,KAAK,OACLC,YAAa,gHACb1B,MAAOA,EACP2B,SAAU,SAAAL,GAAC,OAAIrB,EAASqB,EAAEM,OAAO5B,UAExC,uBAAOU,UAAW,yBAA0Be,KAAK,SAASzB,MAAM,WAEpE,wCACKK,EAASG,UADd,aACK,EAAkBqB,KAAI,SAACC,EAAGC,GAAJ,OACnB,sBAAiBrB,UAAW,iBAA5B,UACI,mBAAGA,UAAW,iBAAd,SAAiCoB,IACjC,wBAAQpB,UAAW,yBAA0BsB,QAAS,kBAAM5B,EAAc0B,EAAGtB,IAA7E,sBAFMuB,oBClD3B,WAACjC,GACZ,OACI,qBAAKY,UAAW,aAAhB,SACKZ,EAAMmC,MAAMJ,KAAI,SAACK,EAAMH,GAAP,OACb,sBACMrB,UAAWZ,EAAMqC,cAAgBD,EAAO,oBAAsB,OAC9DF,QAAS,kBAAMlC,EAAMsC,eAAeF,IAF1C,SAIKA,GAJMH,S,QCEZ,aAEX,MAAuC7B,qBAAWP,GAA3CQ,EAAP,EAAOA,MAAOkC,EAAd,EAAcA,SAAUC,EAAxB,EAAwBA,YACxB,EAAsCvC,mBAAS,GAA/C,mBAAOoC,EAAP,KAAoBC,EAApB,KAEMG,EAAYC,KAAKC,KAAKtC,EAAMuC,gBAAkB,IAC9CT,EAAQ,GAQd,OANAU,qBAAU,WACNN,EAASF,KACV,CAACA,IAEJG,EAAYL,EAAOM,EAAWJ,GAG1B,sBAAKzB,UAAU,YAAf,UACI,qBAAKA,UAAU,aAAf,SACKP,EAAMyC,MAAMf,KAAI,SAAAvB,GAAI,OACjB,sBAAKI,UAAU,YAAf,UACI,8BACI,qBAAKA,UAAW,iBAAkBC,IAAKL,EAAKM,mBAAoBC,IAAI,OAExE,sBAAKH,UAAW,mBAAhB,UACI,cAAC,IAAD,CAASA,UAAW,mBAAoBmC,GAAI,CACxCC,SAAS,QACT3C,MAAO,CAACG,SAFZ,SAIKA,EAAKQ,QAEV,mBAAGJ,UAAW,kBAAd,SACKJ,EAAKS,OAEV,mBAAGL,UAAU,oBAAb,SACKJ,EAAKW,SAEV,oBAAGP,UAAU,qBAAb,UACKJ,EAAKU,QADV,UAGA,mBAAGN,UAAU,yBAAb,SACKJ,EAAKc,iBAAiB2B,OAAS,IAE5BzC,EAAKc,iBAELd,EAAKc,iBAAiB4B,MAAM,EAAE,KAAO,aAzBrB1C,EAAKG,SAgC7C,cAACwC,EAAD,CAAYd,YAAaA,EAAaF,MAAOA,EAAOG,eAAgBA,Q,OCxDnEc,EAAY,YACZC,EAAkB,kBAClBC,EAAiB,iBCAjBC,EAAc,SAAClD,EAAOmD,GAC/B,OAAQA,EAAO7B,MACX,KAAKyB,EACD,OAAO,2BAAI/C,GAAX,IAAiByC,MAAOU,EAAOV,QACnC,KAAKO,EACD,OAAO,2BAAIhD,GAAX,IAAiBuC,gBAAiBY,EAAOC,QAC7C,QACI,OAAOpD,ICPbqD,E,MAAWC,OAAa,CAC1BC,QAAS,yBACTC,QAAS,KAGAC,EAAW,WACO,IAAlBzB,EAAiB,uDAAH,EACnB,OAAOqB,EACFK,IADE,yCACoC1B,KCJtC2B,EAAY,SAAChE,GACtB,IAIA,EAA0BiE,qBAAWV,EAJlB,CACfT,MAAO,GACPF,gBAAiB,IAErB,mBAAOvC,EAAP,KAAc6D,EAAd,KAqCA,OACI,cAACrE,EAAYsE,SAAb,CAAsBjE,MAAO,CACzBG,QAAOkC,SA7BE,SAACF,GACdyB,EAAkBzB,GAAa+B,MAAK,SAAAC,GAVvB,IAACvB,EAIKW,EAOfS,GAXUpB,EAWQuB,EAASC,KAAKA,KAAKC,OAXhB,CACzB5C,KAAMyB,EACNN,WAUIoB,GAReT,EAQQY,EAASC,KAAKA,KAAKE,YARhB,CAC9B7C,KAAM0B,EACNI,eAgCqBjB,YAtBzB,SAAqBL,EAAOsC,EAAYpC,GACpC,GAAIoC,EAAa,GACb,GAAIpC,EAAc,EACd,IAAK,IAAIqC,EAAIrC,EAAc,EAAGqC,GAAKrC,EAAc,IAC7CF,EAAMT,KAAKgD,GACPA,IAAMD,GAFsCC,UAKpD,IAAK,IAAIA,EAAI,EAAGA,GAAK,KACjBvC,EAAMT,KAAKgD,GACPA,IAAMD,GAFWC,UAM7B,IAAK,IAAIA,EAAI,EAAGA,GAAKD,EAAYC,IAC7BvC,EAAMT,KAAKgD,KAMnB,SAGK1E,EAAM2E,Y,eCjDNC,EAAe,SAACvE,EAAOmD,GAChC,OAAQA,EAAO7B,MACX,KAAK2B,EACD,OAAO,2BACAjD,GADP,IAEIE,SAAS,2BAAKF,EAAME,UAAZ,kBAAsBiD,EAAO7C,GAAKN,EAAME,SAASiD,EAAO7C,IAAIkE,QAAO,SAAA7C,GAAC,OAAIA,IAAMwB,EAAOxB,SAErG,QACI,OAAO3B,ICNNyE,EAAa,SAAC9E,GACvB,IAGA,EAA0BiE,qBAAWW,EAHhB,CACjBrE,SAAU,KAEd,mBAAOF,EAAP,KAAc6D,EAAd,KAaA,OACI,cAACnE,EAAaoE,SAAd,CAAuBjE,MAAO,CAC1BG,QAAOC,cANO,SAAC0B,EAAGrB,GACtBuD,EAPkB,SAAClC,EAAGrB,GAAJ,MAAW,CAC7BgB,KAAM2B,EACNtB,IACArB,MAISoE,CAAc/C,EAAGrB,MAI1B,SAGKX,EAAM2E,YCFJK,MAjBf,WACI,OACI,qBAAKpE,UAAU,UAAf,SACI,cAAC,IAAD,UACI,cAAC,EAAD,UACI,cAAC,EAAD,UACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAOqE,KAAM,UAAWC,OAAK,EAACC,UAAWC,IACzC,cAAC,IAAD,CAAOH,KAAM,QAASC,OAAK,EAACC,UAAWE,gBCHpDC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBpB,MAAK,YAAkD,IAA/CqB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCAdO,IAASC,OACL,cAAC,IAAMC,WAAP,UAEQ,cAAC,EAAD,MAGRC,SAASC,eAAe,SAM5BZ,M","file":"static/js/main.9336b0df.chunk.js","sourcesContent":["import {createContext} from 'react';\r\n\r\nexport const PageContext = createContext()","import {createContext} from 'react';\r\n\r\nexport const AboutContext = createContext()","import {useContext, useState} from \"react\";\r\nimport {AboutContext} from \"../context/Comments/AboutContext\";\r\n\r\nexport default (props) => {\r\n    const [value, setValue] = useState('')\r\n\r\n    const {state, deleteComment} = useContext(AboutContext);\r\n    const comments = state.comments\r\n\r\n    const item = props.location?.state?.item\r\n    const idFilm = item.id\r\n    const submitHandler = e => {\r\n        e.preventDefault()\r\n        if (!comments[idFilm]) comments[idFilm] = []\r\n        if(value) comments[idFilm].push(value)\r\n        setValue('')\r\n    }\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className='film'>\r\n                <div className=\"film__img-wrap\">\r\n                    <img className=\"film__img\" src={item.medium_cover_image} alt=\"\"/>\r\n                </div>\r\n                <div className=\"film__about\">\r\n                    <h2 className={'film__title'}>{item.title}</h2>\r\n                    <p className={'film__year'}>{item.year}</p>\r\n                    <p className={'film__runtime'}>\r\n                        <span className=\"film__subtitle\">Runtime: </span>\r\n                        {item.runtime} min\r\n                    </p>\r\n                    <p className={'film__rating'}>\r\n                        <span className=\"film__subtitle\">Rating: </span>\r\n                        {item.rating}\r\n                    </p>\r\n                    <p className={'film__genres'}><span\r\n                        className=\"film__subtitle\">Genres:</span> {item.genres.join(', ')}</p>\r\n                    <p className={'film__description'}>{item.description_full}</p>\r\n                    <div className={'comments'}>\r\n                        <form className={'comments__form'} onSubmit={submitHandler}>\r\n                            <input className={'comments__input'}\r\n                                   type=\"text\"\r\n                                   placeholder={'Введите комментарий'}\r\n                                   value={value}\r\n                                   onChange={e => setValue(e.target.value)}\r\n                            />\r\n                            <input className={'btn comments__btn--add'} type=\"submit\" value='Add'/>\r\n                        </form>\r\n                        <div>\r\n                            {comments[idFilm]?.map((c, index) =>\r\n                                <div key={index} className={'comments__item'}>\r\n                                    <p className={'comments__text'}>{c}</p>\r\n                                    <button className={'btn comments__btn--del'} onClick={() => deleteComment(c, idFilm)}>Delete</button>\r\n                                </div>\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","export default (props) => {\r\n    return (\r\n        <div className={'pagination'}>\r\n            {props.pages.map((page, index) =>\r\n                <span key={index}\r\n                      className={props.currentPage === page ? 'current_page page' : 'page'}\r\n                      onClick={() => props.setCurrentPage(page)}\r\n                >\r\n                    {page}\r\n                </span>\r\n            )}\r\n        </div>\r\n    )\r\n}","import {useContext, useEffect, useState} from \"react\";\r\nimport {PageContext} from \"../context/Page/PageContext\";\r\nimport About from \"./About\";\r\nimport Pagination from \"./Pagination\";\r\nimport {Link, NavLink} from \"react-router-dom\";\r\n\r\nexport default () => {\r\n\r\n    const {state, getFilms, createPages} = useContext(PageContext);\r\n    const [currentPage, setCurrentPage] = useState(1)\r\n\r\n    const pageCount = Math.ceil(state.totalCountFilms / 16)\r\n    const pages = []\r\n\r\n    useEffect(() => {\r\n        getFilms(currentPage)\r\n    }, [currentPage])\r\n\r\n    createPages(pages, pageCount, currentPage)\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"films-list\">\r\n                {state.films.map(item =>\r\n                    <div className=\"film-item\" key={item.id}>\r\n                        <div>\r\n                            <img className={'film-item__img'} src={item.medium_cover_image} alt=\"\"/>\r\n                        </div>\r\n                        <div className={'film-item__about'}>\r\n                            <NavLink className={'film-item__title'} to={{\r\n                                pathname:'/film',\r\n                                state: {item}\r\n                            }}>\r\n                                {item.title}\r\n                            </NavLink>\r\n                            <p className={'film-item__year'}>\r\n                                {item.year}\r\n                            </p>\r\n                            <p className=\"film-item__rating\">\r\n                                {item.rating}\r\n                            </p>\r\n                            <p className=\"film-item__runtime\">\r\n                                {item.runtime} min\r\n                            </p>\r\n                            <p className=\"film-item__description\">\r\n                                {item.description_full.length < 300\r\n                                    ?\r\n                                    item.description_full\r\n                                    :\r\n                                    item.description_full.slice(0,300) + '...'\r\n                                }\r\n                            </p>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n            </div>\r\n            <Pagination currentPage={currentPage} pages={pages} setCurrentPage={setCurrentPage}/>\r\n        </div>\r\n    );\r\n};","export const GET_FILMS = 'GET_FILMS'\r\nexport const SET_TOTAL_FILMS = 'SET_TOTAL_FILMS'\r\nexport const DELETE_COMMENT = 'DELETE_COMMENT'\r\n\r\n","import {GET_FILMS, SET_TOTAL_FILMS} from \"../types\";\r\n\r\nexport const PageReducer = (state, action) => {\r\n    switch (action.type) {\r\n        case GET_FILMS:\r\n            return {...state,films: action.films};\r\n        case SET_TOTAL_FILMS:\r\n            return {...state,totalCountFilms: action.count};\r\n        default:\r\n            return state;\r\n    }\r\n}","import * as axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://yts.mx/api/v2/',\r\n    headers: {},\r\n});\r\n\r\nexport const filmsAPI = {\r\n    getfilms(currentPage = 1) {\r\n        return instance\r\n            .get(`list_movies.json?limit=16&page=${currentPage}`)\r\n    }\r\n};\r\n\r\n\r\n","import React, {useReducer} from 'react';\r\nimport {PageReducer} from \"./PageReducer\";\r\nimport {GET_FILMS,  SET_TOTAL_FILMS} from \"../types\";\r\nimport {filmsAPI} from \"../../api/api\";\r\nimport {PageContext} from \"./PageContext\";\r\n\r\nexport const PageState = (props) => {\r\n    let initialState = {\r\n        films: [],\r\n        totalCountFilms: 0\r\n    };\r\n    const [state, dispatch] = useReducer(PageReducer, initialState)\r\n    const setFilms = (films) => ({\r\n        type: GET_FILMS,\r\n        films\r\n    })\r\n    const setTotalFilms = (count) => ({\r\n        type: SET_TOTAL_FILMS,\r\n        count\r\n    })\r\n\r\n    const getFilms = (currentPage) => {\r\n        filmsAPI.getfilms(currentPage).then(response => {\r\n            dispatch(setFilms(response.data.data.movies))\r\n            dispatch(setTotalFilms(response.data.data.movie_count))\r\n        })\r\n    }  // Запрос данных\r\n\r\n    function createPages(pages, pagesCount, currentPage) {\r\n        if (pagesCount > 11) {\r\n            if (currentPage > 5) {\r\n                for (let i = currentPage - 5; i <= currentPage + 5; i++) {\r\n                    pages.push(i)\r\n                    if (i === pagesCount) break\r\n                }\r\n            } else {\r\n                for (let i = 1; i <= 11; i++) {\r\n                    pages.push(i)\r\n                    if (i === pagesCount) break\r\n                }\r\n            }\r\n        } else {\r\n            for (let i = 1; i <= pagesCount; i++) {\r\n                pages.push(i)\r\n            }\r\n        }\r\n    } // Пагинация\r\n\r\n    return (\r\n        <PageContext.Provider value={{\r\n            state, getFilms, createPages\r\n        }}>\r\n            {props.children}\r\n        </PageContext.Provider>\r\n    )\r\n}","import {DELETE_COMMENT} from \"../types\";\r\n\r\n\r\nexport const AboutReducer = (state, action) => {\r\n    switch (action.type) {\r\n        case DELETE_COMMENT:\r\n            return {\r\n                ...state,\r\n                comments: {...state.comments,[action.id]: state.comments[action.id].filter(c=>  c !== action.c)}\r\n            };\r\n        default:\r\n            return state\r\n    }\r\n}","import React, {useReducer} from 'react';\r\nimport {AboutContext} from \"./AboutContext\";\r\nimport {AboutReducer} from \"./AboutReducer\";\r\nimport {DELETE_COMMENT, GET_FILMS} from \"../types\";\r\n\r\nexport const AboutState = (props) => {\r\n    const initialState = {\r\n        comments: {},\r\n    }\r\n    const [state, dispatch] = useReducer(AboutReducer, initialState)\r\n\r\n\r\n    const deleteComOfId = (c, id) =>({\r\n        type: DELETE_COMMENT,\r\n        c,\r\n        id,\r\n    })\r\n\r\n    const deleteComment = (c, id) => {\r\n        dispatch(deleteComOfId(c, id))\r\n    }\r\n\r\n    return (\r\n        <AboutContext.Provider value={{\r\n            state, deleteComment\r\n        }}>\r\n            {props.children}\r\n        </AboutContext.Provider>\r\n    )\r\n}","import './App.css';\r\nimport Page from \"./components/Page\";\r\nimport {PageState} from \"./context/Page/PageState\";\r\nimport {BrowserRouter, Route, Switch} from \"react-router-dom\";\r\nimport About from \"./components/About\";\r\nimport {AboutState} from \"./context/Comments/AboutState\";\r\n\r\nfunction App() {\r\n    return (\r\n        <div className=\"wrapper\">\r\n            <BrowserRouter>\r\n                <PageState>\r\n                    <AboutState>\r\n                        <Switch>\r\n                            <Route path={'/movies'} exact component={Page}/>\r\n                            <Route path={'/film'} exact component={About}/>\r\n                        </Switch>\r\n                    </AboutState>\r\n                </PageState>\r\n            </BrowserRouter>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n// import {HashRouter} from \"react-router-dom\";\n\nReactDOM.render(\n    <React.StrictMode>\n        {/*<HashRouter>*/}\n            <App/>\n        {/*</HashRouter>*/}\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}