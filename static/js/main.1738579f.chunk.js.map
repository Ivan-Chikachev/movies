{"version":3,"sources":["context/Page/PageContext.js","components/Pagination.jsx","components/Page.jsx","context/types.jsx","context/Page/PageReducer.js","api/api.js","context/Page/PageState.js","context/Comments/AboutContext.js","components/About.jsx","context/Comments/AboutReducer.js","context/Comments/AboutState.js","App.js","reportWebVitals.js","index.js"],"names":["PageContext","createContext","props","className","pages","map","page","index","currentPage","onClick","setCurrentPage","useContext","state","getFilms","createPages","useState","pageCount","Math","ceil","totalCountFilms","useEffect","films","item","src","medium_cover_image","alt","to","pathname","title","year","rating","runtime","description_full","length","slice","id","Pagination","GET_FILMS","SET_TOTAL_FILMS","DELETE_COMMENT","PageReducer","action","type","count","instance","axios","baseURL","headers","filmsAPI","get","PageState","useReducer","dispatch","Provider","value","then","response","data","movies","movie_count","pagesCount","i","push","children","AboutContext","setValue","deleteComment","comments","location","idFilm","genres","join","onSubmit","e","preventDefault","placeholder","onChange","target","c","AboutReducer","filter","AboutState","deleteComOfId","App","path","exact","component","Page","About","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1738579f.chunk.js","sourcesContent":["import {createContext} from 'react';\r\n\r\nexport const PageContext = createContext()","export default (props) => {\r\n    return (\r\n        <div className={'pagination'}>\r\n            {props.pages.map((page, index) =>\r\n                <span key={index}\r\n                      className={props.currentPage === page ? 'current_page page' : 'page'}\r\n                      onClick={() => props.setCurrentPage(page)}\r\n                >\r\n                    {page}\r\n                </span>\r\n            )}\r\n        </div>\r\n    )\r\n}","import {useContext, useEffect, useState} from \"react\";\r\nimport {PageContext} from \"../context/Page/PageContext\";\r\nimport Pagination from \"./Pagination\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nexport default () => {\r\n\r\n    const {state, getFilms, createPages} = useContext(PageContext);\r\n    const [currentPage, setCurrentPage] = useState(1)\r\n\r\n    const pageCount = Math.ceil(state.totalCountFilms / 16)\r\n    const pages = []\r\n\r\n    useEffect(() => {\r\n        getFilms(currentPage)\r\n    }, [currentPage])\r\n\r\n    createPages(pages, pageCount, currentPage)\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"films-list\">\r\n                {state.films.map(item =>\r\n                    <div className=\"film-item\" key={item.id}>\r\n                        <div>\r\n                            <img className={'film-item__img'} src={item.medium_cover_image} alt=\"\"/>\r\n                        </div>\r\n                        <div className={'film-item__about'}>\r\n                            <NavLink className={'film-item__title'} to={{\r\n                                pathname:'/film',\r\n                                state: {item}\r\n                            }}>\r\n                                {item.title}\r\n                            </NavLink>\r\n                            <p className={'film-item__year'}>\r\n                                {item.year}\r\n                            </p>\r\n                            <p className=\"film-item__rating\">\r\n                                {item.rating}\r\n                            </p>\r\n                            <p className=\"film-item__runtime\">\r\n                                {item.runtime} min\r\n                            </p>\r\n                            <p className=\"film-item__description\">\r\n                                {item.description_full.length < 300\r\n                                    ?\r\n                                    item.description_full\r\n                                    :\r\n                                    item.description_full.slice(0,300) + '...'\r\n                                }\r\n                            </p>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n            </div>\r\n            <Pagination currentPage={currentPage} pages={pages} setCurrentPage={setCurrentPage}/>\r\n        </div>\r\n    );\r\n};","export const GET_FILMS = 'GET_FILMS'\r\nexport const SET_TOTAL_FILMS = 'SET_TOTAL_FILMS'\r\nexport const DELETE_COMMENT = 'DELETE_COMMENT'\r\n\r\n","import {GET_FILMS, SET_TOTAL_FILMS} from \"../types\";\r\n\r\nexport const PageReducer = (state, action) => {\r\n    switch (action.type) {\r\n        case GET_FILMS:\r\n            return {...state,films: action.films};\r\n        case SET_TOTAL_FILMS:\r\n            return {...state,totalCountFilms: action.count};\r\n        default:\r\n            return state;\r\n    }\r\n}","import * as axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://yts.mx/api/v2/',\r\n    headers: {},\r\n});\r\n\r\nexport const filmsAPI = {\r\n    getfilms(currentPage = 1) {\r\n        return instance\r\n            .get(`list_movies.json?limit=16&page=${currentPage}`)\r\n    }\r\n};\r\n\r\n\r\n","import React, {useReducer} from 'react';\r\nimport {PageReducer} from \"./PageReducer\";\r\nimport {GET_FILMS,  SET_TOTAL_FILMS} from \"../types\";\r\nimport {filmsAPI} from \"../../api/api\";\r\nimport {PageContext} from \"./PageContext\";\r\n\r\nexport const PageState = (props) => {\r\n    let initialState = {\r\n        films: [],\r\n        totalCountFilms: 0\r\n    };\r\n    const [state, dispatch] = useReducer(PageReducer, initialState)\r\n    const setFilms = (films) => ({\r\n        type: GET_FILMS,\r\n        films\r\n    })\r\n    const setTotalFilms = (count) => ({\r\n        type: SET_TOTAL_FILMS,\r\n        count\r\n    })\r\n\r\n    const getFilms = (currentPage) => {\r\n        filmsAPI.getfilms(currentPage).then(response => {\r\n            dispatch(setFilms(response.data.data.movies))\r\n            dispatch(setTotalFilms(response.data.data.movie_count))\r\n        })\r\n    }  // Запрос данных\r\n\r\n    function createPages(pages, pagesCount, currentPage) {\r\n        if (pagesCount > 11) {\r\n            if (currentPage > 5) {\r\n                for (let i = currentPage - 5; i <= currentPage + 5; i++) {\r\n                    pages.push(i)\r\n                    if (i === pagesCount) break\r\n                }\r\n            } else {\r\n                for (let i = 1; i <= 11; i++) {\r\n                    pages.push(i)\r\n                    if (i === pagesCount) break\r\n                }\r\n            }\r\n        } else {\r\n            for (let i = 1; i <= pagesCount; i++) {\r\n                pages.push(i)\r\n            }\r\n        }\r\n    } // Пагинация\r\n\r\n    return (\r\n        <PageContext.Provider value={{\r\n            state, getFilms, createPages\r\n        }}>\r\n            {props.children}\r\n        </PageContext.Provider>\r\n    )\r\n}","import {createContext} from 'react';\r\n\r\nexport const AboutContext = createContext()","import {useContext, useState} from \"react\";\r\nimport {AboutContext} from \"../context/Comments/AboutContext\";\r\n\r\nexport default (props) => {\r\n    const [value, setValue] = useState('')\r\n\r\n    const {state, deleteComment} = useContext(AboutContext);\r\n    const comments = state.comments\r\n\r\n    const item = props.location?.state?.item\r\n    const idFilm = item.id\r\n    const submitHandler = e => {\r\n        e.preventDefault()\r\n        if (!comments[idFilm]) comments[idFilm] = []\r\n        if (value) comments[idFilm].push(value)\r\n        setValue('')\r\n    }\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className='film'>\r\n                <div className=\"film__img-wrap\">\r\n                    <img className=\"film__img\" src={item.medium_cover_image} alt=\"\"/>\r\n                </div>\r\n                <div className=\"film__about\">\r\n                    <h2 className={'film__title'}>\r\n                        {item.title}\r\n                    </h2>\r\n                    <p className={'film__year'}>\r\n                        {item.year}\r\n                    </p>\r\n                    <p className={'film__runtime'}>\r\n                        <span className=\"film__subtitle\">Runtime: </span>\r\n                        {item.runtime} min\r\n                    </p>\r\n                    <p className={'film__rating'}>\r\n                        <span className=\"film__subtitle\">Rating: </span>\r\n                        {item.rating}\r\n                    </p>\r\n                    <p className={'film__genres'}>\r\n                        <span\r\n                            className=\"film__subtitle\">\r\n                            Genres:</span> {item.genres.join(', ')}\r\n                    </p>\r\n                    <p className={'film__description'}>\r\n                        {item.description_full}\r\n                    </p>\r\n                </div>\r\n\r\n            </div>\r\n            <div className={'comments'}>\r\n                <form className={'comments__form'} onSubmit={submitHandler}>\r\n                            <textarea className={'comments__input'}\r\n                                      placeholder={'Введите комментарий'}\r\n                                      value={value}\r\n                                      onChange={e => setValue(e.target.value)}\r\n                            />\r\n                    <input className={'btn comments__btn comments__btn--add'} type=\"submit\" value='Add'/>\r\n                </form>\r\n                <div>\r\n                    {comments[idFilm]?.map((c, index) =>\r\n                        <div key={index} className={'comments__item'}>\r\n                            <p className={'comments__text'}>{c}</p>\r\n                            <button className={'btn comments__btn comments__btn--del'}\r\n                                    onClick={() => deleteComment(c, idFilm)}>\r\n                                Delete\r\n                            </button>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import {DELETE_COMMENT} from \"../types\";\r\n\r\n\r\nexport const AboutReducer = (state, action) => {\r\n    switch (action.type) {\r\n        case DELETE_COMMENT:\r\n            return {\r\n                ...state,\r\n                comments: {...state.comments,[action.id]: state.comments[action.id].filter(c=>  c !== action.c)}\r\n            };\r\n        default:\r\n            return state\r\n    }\r\n}","import React, {useReducer} from 'react';\r\nimport {AboutContext} from \"./AboutContext\";\r\nimport {AboutReducer} from \"./AboutReducer\";\r\nimport {DELETE_COMMENT, GET_FILMS} from \"../types\";\r\n\r\nexport const AboutState = (props) => {\r\n    const initialState = {\r\n        comments: {},\r\n    }\r\n    const [state, dispatch] = useReducer(AboutReducer, initialState)\r\n\r\n\r\n    const deleteComOfId = (c, id) =>({\r\n        type: DELETE_COMMENT,\r\n        c,\r\n        id,\r\n    })\r\n\r\n    const deleteComment = (c, id) => {\r\n        dispatch(deleteComOfId(c, id))\r\n    }\r\n\r\n    return (\r\n        <AboutContext.Provider value={{\r\n            state, deleteComment\r\n        }}>\r\n            {props.children}\r\n        </AboutContext.Provider>\r\n    )\r\n}","import './App.css';\r\nimport Page from \"./components/Page\";\r\nimport {PageState} from \"./context/Page/PageState\";\r\nimport {BrowserRouter, Route, Switch} from \"react-router-dom\";\r\nimport About from \"./components/About\";\r\nimport {AboutState} from \"./context/Comments/AboutState\";\r\n\r\nfunction App() {\r\n    return (\r\n        <div className=\"wrapper\">\r\n            <BrowserRouter>\r\n                <PageState>\r\n                    <AboutState>\r\n                        <Switch>\r\n                            <Route path={'/movies'} exact component={Page}/>\r\n                            <Route path={'/film'} exact component={About}/>\r\n                        </Switch>\r\n                    </AboutState>\r\n                </PageState>\r\n            </BrowserRouter>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <React.StrictMode>\n            <App/>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}